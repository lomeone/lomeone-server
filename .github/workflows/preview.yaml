name: Preview Deploy

on:
  push:
    branches: [ develop, bugfix/** ]
  pull_request:
    branches: [ develop ]

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout my code
        uses: actions/checkout@v4

      - name: Configure AWS Credential
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up jdk
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Run test & Make coverage report
        run: |
          ./gradlew clean
          ./gradlew test
          ./gradlew jacocoAllReport

      - name: Run coverage measurement (use codecov)
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./build/reports/jacoco/jacocoAllReport/jacocoAllReport.xml
          fail_ci_if_error: true

      - name: Set up coveralls repo token in environment
        run: echo "COVERALLS_REPO_TOKEN=${{ secrets.COVERALLS_REPO_TOKEN }}" >> $GITHUB_ENV

      - name: Run coverage measurement (use coveralls)
        run: ./gradlew coveralls

  build:
    name: JIB Build
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout my code
        uses: actions/checkout@v4

      - name: Configure AWS Credential
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Sign in DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up jdk
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: JIB Build
        run: |
          ./gradlew application:jib --stacktrace

  deploy:
    name: Deploy preview
    runs-on: ubuntu-latest
    needs: build
    environment: preview

    steps:
      - name: Checkout my code
        uses: actions/checkout@v4

      - name: Check Work Flow Sha
        run: |
          COMMIT_SHA=$(git rev-parse --short HEAD)
          echo "COMMIT_SHA=$COMMIT_SHA" >> $GITHUB_ENV
          echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
          echo "modified_branch=$(echo ${{ env.branch }} | sed 's/\//-/g')" >> $GITHUB_ENV
          echo "modified_branch_test=$(echo "bugfix/test-body" | sed 's/\//-/g')" >> $GITHUB_ENV


      - name: Check COMMIT_SHA
        run: |
          echo "The short commit SHA is ${{ env.COMMIT_SHA }}"
          echo "The branch is ${{ env.branch }}"
          echo "Modified branch name: ${{ env.modified_branch }}"
          echo "Modified branch test name: ${{ env.modified_branch_test }}"
          echo "base branch ${{ github.head_ref }}"
          echo "target branch ${{ github.base_ref }}"

      - name: Check event_name
        run: |
          echo "This event is $GITHUB_EVENT_NAME"

#      - name: Configure AWS Credential
#        uses: aws-actions/configure-aws-credentials@v4
#        with:
#          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
#          aws-region: ${{ secrets.AWS_REGION }}
#
#      - name: Deploy to develop in PR
#        if: ${{ github.event_name == 'pull_request' }}
#        uses: bitovi/github-actions-deploy-eks-helm@v1.2.10
#        with:
#          aws-region: ${{ secrets.AWS_REGION }}
#          cluster-name: ${{ secrets.EKS_CLUSTER_NAME }}
#          config-files: helm-chart-springboot/values.yaml,helm-chart-springboot/dev-values.yaml
#          chart-path: helm-chart-springboot/
#          namespace: ${{ secrets.EKS_NAMESPACE }}
#          values: image.tag=${{ env.COMMIT_SHA }},ingress.hosts.hots=${{ env.COMMIT_SHA }}-dev-server.lomeone.com
#          name: ${{ env.COMMIT_SHA }}-dev-lomeone-server
#
#      - name: Deploy to develop
#        if: ${{ github.event_name == 'push' && env.branch == 'develop' }}
#        uses: bitovi/github-actions-deploy-eks-helm@v1.2.10
#        with:
#          aws-region: ${{ secrets.AWS_REGION }}
#          cluster-name: ${{ secrets.EKS_CLUSTER_NAME }}
#          config-files: helm-chart-springboot/values.yaml,helm-chart-springboot/dev-values.yaml
#          chart-path: helm-chart-springboot/
#          namespace: ${{ secrets.EKS_NAMESPACE }}
#          name: dev-lomeone-server
#
#      - name: Deploy to bugfix
#        if: ${{ github.event_name == 'push' && startsWith(env.branch,'bugfix/') }}
#        uses: bitovi/github-actions-deploy-eks-helm@v1.2.10
#        with:
#          aws-region: ${{ secrets.AWS_REGION }}
#          cluster-name: ${{ secrets.EKS_CLUSTER_NAME }}
#          config-files: helm-chart-springboot/values.yaml,helm-chart-springboot/dev-values.yaml
#          chart-path: helm-chart-springboot/
#          namespace: ${{ secrets.EKS_NAMESPACE }}
#          values: image.tag=${{ env.COMMIT_SHA }},ingress.hosts.hots=${{ env.COMMIT_SHA }}-dev-server.lomeone.com
#          name: ${{ env.branch }}-dev-lomeone-server
